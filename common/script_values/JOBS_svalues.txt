# Wages owed for each job are increased by buildings, then scaled by the wages multiplier for that job.
# Resource extraction jobs' wages are determined by the number of pops rather than the number of RGOs
# Who pays out the wages is determined by who owns the respective industry

# The number of job slots for each job (job slots = building slots for buildings associated with the given job) is determined by:
# + The number of pops educated to that level
# - The number of used up job slots (i.e. buildings) in the same education level

##################
# Job slot values
# Province scope
##################

# Jobs capped by higher education
JOBS_administrators = {
	value = num_of_URB_administration_district
}

JOBS_health_workers = {
	value = num_of_INF_hospital
}

JOBS_educators = {
	value = num_of_EDU_school
	add = num_of_EDU_university
}

JOBS_arts_workers = {
	value = num_of_URB_cultural_district
}

# Jobs capped by basic education
JOBS_infrastructure_workers = {
	value = num_of_INF_depot
	add = num_of_INF_canal
	add = num_of_INF_railway_upgrade
	add = num_of_INF_sewer_infrastructure
	add = num_of_river_port_building
	add = num_of_port_building
}

JOBS_clerks = {
	value = num_of_URB_commerce_district
}

# Jobs not capped by education

JOBS_military = {
	value = num_of_arsenal_building
	add = num_of_fortress_building
}

JOBS_resource_gatherer = {
	value = num_of_IND_resource_gathering_operation
}

JOBS_industrial_worker = {
	value = num_of_IND_industrial_estate
}

JOBS_subsistence_worker = { # Workers not employed by buildings, but working due to lack of industrialisation
	value = total_population
	multiply = inverse_industrialisation # If industrialisation is 0, this will be 100
}


##############
# Meta-values
##############

JOBS_num_used_slots = {
	# Scope: province
	value = JOBS_subsistence_worker
	add = JOBS_industrial_worker
	add = JOBS_resource_gatherer
	add = JOBS_military
	add = JOBS_clerks
	add = JOBS_infrastructure_workers
	add = JOBS_arts_workers
	add = JOBS_educators
	add = JOBS_health_workers
	add = JOBS_administrators
}

JOBS_unemployed_pops_province = {
	# Scope: province
	value = total_population
	subtract = JOBS_num_used_slots
}